% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitQTL.R
\name{fitQTL}
\alias{fitQTL}
\title{Fit a single QTL model}
\usage{
fitQTL(data, params, dominance = 1, trait, marker, cofactor = NULL)
}
\arguments{
\item{data}{Variable of class \code{\link{diallel_geno_pheno}}}

\item{params}{List containing the number of burn-in (burnIn) and total iterations (nIter)}

\item{dominance}{Dominance degree (1-4). See Details.}

\item{trait}{Name of trait}

\item{marker}{Name of marker to fit as QTL}

\item{cofactor}{Name of marker to fit as cofactor}
}
\value{
List containing
\describe{
\item{R2}{Coefficient of determination}
\item{deltaDIC}{Deviance Information Criterion relative to null model}
\item{h2}{Mean and SE for proportion of variance due to additive effects}
\item{effectsA}{Mean and SE of the additive effects for parental haplotypes}
\item{plotA}{ggplot object for additive effects}
}
If dominance > 1, the list also contains
\describe{
\item{d2}{Mean and SE for proportion of variance due to dominance (all orders)}
\item{effectsD}{Mean and SE of the digenic dominance effects}
\item{plotD}{ggplot object for digenic dominance effects}
}
}
\description{
Fit a single QTL model
}
\details{
Standard errors of the posterior mean estimates are calculated by dividing the SD of the Markov Chain by the square root of the effective number of iterations, which is calculated by function \code{effectiveSize} in R package \code{coda}. The error bars on the plot of additive effects correspond to +/- 1.96*SE (95 percent confidence interval). For binary traits, R2 = the squared phi correlation. The additive and dominance variances are reported as a proportion of the total variance: h2=Va/(Va+Vd+Vresid) and d2=Vd/(Va+Vd+Vresid). Parameter \code{dominance} controls the genetic model: 1 = additive, 2 = digenic dominance, 3 = trigenic dominance, 4 = quadrigenic dominance.
}
\examples{
\dontrun{
## additive effects
params1 <- set_params( diallel_example, trait = "tuber_shape" )

fit1 <- fitQTL( data = diallel_example, 
                 trait = "tuber_shape", 
                 params = params1, 
                 marker = "solcap_snp_c2_25522")
                 
## additive + dominance effects
params2 <- set_params( diallel_example, trait = "tuber_shape", dominance = TRUE )

fit2 <- fitQTL( data = diallel_example, 
                 trait = "tuber_shape", 
                 params = params2, 
                 marker = "solcap_snp_c2_25522",
                 dominance = 2)
                 
}
                 
}
